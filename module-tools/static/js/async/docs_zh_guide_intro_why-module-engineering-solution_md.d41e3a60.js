(self.webpackChunkwebpack=self.webpackChunkwebpack||[]).push([["docs_zh_guide_intro_why-module-engineering-solution_md"],{87555:function(e,n,r){"use strict";Object.defineProperty(n,"__esModule",{value:!0});!function(e,n){for(var r in n)Object.defineProperty(e,r,{enumerable:!0,get:n[r]})}(n,{frontmatter:function(){return o},toc:function(){return i},title:function(){return l},default:function(){return h}});var t=r("12151"),s=r("21447");let o={sidebar_position:2},i=[],l="为什么需要模块工程解决方案";function c(e){let n=Object.assign({h1:"h1",a:"a",p:"p",img:"img",strong:"strong"},(0,s.useMDXComponents)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"为什么需要模块工程解决方案",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#为什么需要模块工程解决方案",children:"#"}),"为什么需要模块工程解决方案"]}),"\n",(0,t.jsx)(n.p,{children:"大家可能都经历过：从零开始开发一个组件库或者工具库的过程中，我们不仅要考虑项目本身的代码逻辑如何编写，还要考虑项目的构建、调试、测试、代码格式化等等和代码逻辑无关的事情。"}),"\n",(0,t.jsxs)(n.p,{children:["比如说，当我们考虑构建模块项目的代码是使用什么构建工具的时候，在之前我们可能会考虑使用 ",(0,t.jsx)(n.a,{href:"https://webpack.js.org/",target:"_blank",rel:"noopener noreferrer",children:"webpack"})," 还是 ",(0,t.jsx)(n.a,{href:"https://rollupjs.org/guide/en/",target:"_blank",rel:"noopener noreferrer",children:"Rollup"}),"，然而现在的话，也许还会考虑是使用 ",(0,t.jsx)(n.a,{href:"https://esbuild.github.io/",target:"_blank",rel:"noopener noreferrer",children:"esbuild"})," 还是 ",(0,t.jsx)(n.a,{href:"https://swc.rs/",target:"_blank",rel:"noopener noreferrer",children:"SWC"}),"。"]}),"\n",(0,t.jsx)(n.p,{children:"无论选择哪个构建工具，这对于没有熟练掌握这些构建工具使用方式的开发者来说，是需要一定的成本去学习的。即使想要快速使用，也会需要花费大量的时间和精力。"}),"\n",(0,t.jsx)(n.p,{children:"而除了构建这件事情以外，像为项目提供调试工具、支持测试能力、增加代码格式校验等等，对于一个新手来说都有可能需要花费很长的时间和精力了解或者掌握它们，并且真正的服务于当前的项目中。"}),"\n",(0,t.jsx)(n.p,{children:"而为了保证代码质量以及项目的完整性，我们往往是需要做这些与代码逻辑实现无关的事情。然而这些事情很有可能会影响整体的项目开发进度，降低开发者的开发体验，会让开发者感觉模块项目的开发门槛很高。"}),"\n",(0,t.jsx)(n.p,{children:"如果说每次开发一个模块类型的项目都需要经历一遍这些工作准备的话，那么基本上刚开始开发的时间会大部分花费在这些与代码实现无关的事情上。如果能够提供一个模块工程解决方案，它能够帮助开发者解决项目工程上的事情，让开发者可以更专注于代码的实现上，那么这将会大大提升模块类型项目的开发体验。"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://lf3-static.bytednsdoc.com/obj/eden-cn/uhbfnupenuhf/module-tools/why-module-solution.png",alt:"没有使用工程方案对比使用工程方案"})}),"\n",(0,t.jsxs)(n.p,{children:["Modern.js 为了让开发模块类型的项目更简单，为了解决上述提到的问题提供了模块工程解决方案，并且使用 Module Tools 提供了主要的功能。",(0,t.jsx)(n.strong,{children:"Module-tools 可以理解为是一个专门用于模块类型项目开发的工具"}),"。"]})]})}var h=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.useMDXComponents)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(c,e)})):c(e)}}}]);