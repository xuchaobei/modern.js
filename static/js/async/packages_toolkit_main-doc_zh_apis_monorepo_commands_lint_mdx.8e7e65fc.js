(self.webpackChunkwebpack=self.webpackChunkwebpack||[]).push([["packages_toolkit_main-doc_zh_apis_monorepo_commands_lint_mdx"],{46757:function(s,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});!function(s,e){for(var n in e)Object.defineProperty(s,n,{enumerable:!0,get:e[n]})}(e,{frontmatter:function(){return l},toc:function(){return o},title:function(){return r},default:function(){return a}});var i=n("41660");let l={sidebar_position:6},o=[],r="lint";function c(s){let e=Object.assign({h1:"h1",a:"a",div:"div",button:"button",pre:"pre",code:"code",span:"span",p:"p",ul:"ul",li:"li"},s.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.h1,{id:"lint",children:[(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#lint",children:"#"}),"lint"]}),"\n",(0,i.jsxs)(e.div,{className:"language-bash",children:[(0,i.jsx)(e.div,{className:""}),(0,i.jsxs)(e.div,{className:"modern-code-content",children:[(0,i.jsx)(e.button,{className:"copy"}),(0,i.jsx)(e.pre,{className:"shiki",style:{backgroundColor:"var(--shiki-color-background)"},children:(0,i.jsxs)(e.code,{children:[(0,i.jsx)(e.span,{className:"line",children:(0,i.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"Usage: modern lint [options] [...files]"})}),"\n",(0,i.jsx)(e.span,{className:"line"}),"\n",(0,i.jsxs)(e.span,{className:"line",children:[(0,i.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"lint and fix "}),(0,i.jsx)(e.span,{style:{color:"var(--shiki-token-function)"},children:"source"}),(0,i.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:" files"})]}),"\n",(0,i.jsx)(e.span,{className:"line"}),"\n",(0,i.jsx)(e.span,{className:"line",children:(0,i.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"Options:"})}),"\n",(0,i.jsxs)(e.span,{className:"line",children:[(0,i.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"  --no-fix    disable auto fix "}),(0,i.jsx)(e.span,{style:{color:"var(--shiki-token-function)"},children:"source"}),(0,i.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:" file"})]}),"\n",(0,i.jsxs)(e.span,{className:"line",children:[(0,i.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"  -h, --help  display "}),(0,i.jsx)(e.span,{style:{color:"var(--shiki-token-function)"},children:"help"}),(0,i.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(e.span,{style:{color:"var(--shiki-token-keyword)"},children:"for"}),(0,i.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(e.span,{style:{color:"var(--shiki-token-function)"},children:"command"})]}),"\n",(0,i.jsx)(e.span,{className:"line"})]})})]})]}),"\n",(0,i.jsxs)(e.p,{children:["运行 ",(0,i.jsx)(e.code,{children:"ESLint"})," 检查 monorepo 中代码语法情况， 通长情况下，我们只需要在 ",(0,i.jsx)(e.code,{children:"git commit"})," 阶段通过 ",(0,i.jsx)(e.code,{children:"lint-staged"})," 检查本次提交修改的部分代码。"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"--no-fix"})," 参数设置后可以关闭自动修复 lint 错误代码的能力。"]}),"\n"]})]})}var a=function(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=s.components||{};return e?(0,i.jsx)(e,Object.assign({},s,{children:(0,i.jsx)(c,s)})):c(s)}}}]);