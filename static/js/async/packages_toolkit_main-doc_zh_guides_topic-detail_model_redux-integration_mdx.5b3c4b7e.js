(self.webpackChunkwebpack=self.webpackChunkwebpack||[]).push([["packages_toolkit_main-doc_zh_guides_topic-detail_model_redux-integration_mdx"],{39167:function(e,r,s){"use strict";Object.defineProperty(r,"__esModule",{value:!0});!function(e,r){for(var s in r)Object.defineProperty(e,s,{enumerable:!0,get:r[s]})}(r,{frontmatter:function(){return o},toc:function(){return l},title:function(){return i},default:function(){return c}});var n=s("41660");let o={sidebar_position:11,title:"Redux 生态集成"},l=[],i="Redux 生态集成";function t(e){let r=Object.assign({h1:"h1",a:"a",p:"p",code:"code",div:"div",button:"button",pre:"pre",span:"span"},e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.h1,{id:"redux-生态集成",children:[(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#redux-生态集成",children:"#"}),"Redux 生态集成"]}),"\n",(0,n.jsxs)(r.p,{children:["Reduck 基于 Redux 实现，因此可以使用 Redux ",(0,n.jsx)(r.a,{href:"https://redux.js.org/introduction/ecosystem",target:"_blank",rel:"nofollow",children:"生态的库"}),"，实现功能增强。通过 ",(0,n.jsx)(r.a,{href:"/apis/app/runtime/model/Provider.html",children:(0,n.jsx)(r.code,{children:"Provider"})})," 、",(0,n.jsx)(r.a,{href:"/apis/app/runtime/model/create-app.html",children:(0,n.jsx)(r.code,{children:"createApp"})})," 和 ",(0,n.jsx)(r.a,{href:"/apis/app/runtime/model/create-store.html",children:(0,n.jsx)(r.code,{children:"createStore"})})," 等 API ，可以设置使用 Redux 的 ",(0,n.jsx)(r.a,{href:"https://redux.js.org/understanding/thinking-in-redux/glossary#middleware",target:"_blank",rel:"nofollow",children:"中间件"})," 和 ",(0,n.jsx)(r.a,{href:"https://redux.js.org/understanding/thinking-in-redux/glossary#store-enhancer",target:"_blank",rel:"nofollow",children:"Store Enhancer"}),"；使用 ",(0,n.jsx)(r.a,{href:"/apis/app/runtime/model/create-store.html",children:(0,n.jsx)(r.code,{children:"createStore"})})," 还可以完全掌控 Store 的创建过程。"]}),"\n",(0,n.jsxs)(r.p,{children:["例如，我们希望使用中间件 ",(0,n.jsx)(r.a,{href:"https://github.com/LogRocket/redux-logger",target:"_blank",rel:"nofollow",children:(0,n.jsx)(r.code,{children:"redux-logger"})}),"，示例代码如下："]}),"\n",(0,n.jsxs)(r.div,{className:"language-ts",children:[(0,n.jsx)(r.div,{className:""}),(0,n.jsxs)(r.div,{className:"modern-code-content",children:[(0,n.jsx)(r.button,{className:"copy"}),(0,n.jsx)(r.pre,{className:"shiki",style:{backgroundColor:"var(--shiki-color-background)"},children:(0,n.jsxs)(r.code,{children:[(0,n.jsxs)(r.span,{className:"line",children:[(0,n.jsx)(r.span,{style:{color:"var(--shiki-token-constant)"},children:"ReactDOM"}),(0,n.jsx)(r.span,{style:{color:"var(--shiki-token-function)"},children:".render"}),(0,n.jsx)(r.span,{style:{color:"var(--shiki-color-text)"},children:"("})]}),"\n",(0,n.jsxs)(r.span,{className:"line",children:[(0,n.jsx)(r.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,n.jsx)(r.span,{style:{color:"var(--shiki-token-keyword)"},children:"<"}),(0,n.jsx)(r.span,{style:{color:"var(--shiki-color-text)"},children:"Provider config"}),(0,n.jsx)(r.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,n.jsx)(r.span,{style:{color:"var(--shiki-color-text)"},children:"{{ middlewares"}),(0,n.jsx)(r.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,n.jsx)(r.span,{style:{color:"var(--shiki-color-text)"},children:" [logger] }}"}),(0,n.jsx)(r.span,{style:{color:"var(--shiki-token-keyword)"},children:">"})]}),"\n",(0,n.jsxs)(r.span,{className:"line",children:[(0,n.jsx)(r.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,n.jsx)(r.span,{style:{color:"var(--shiki-token-comment)"},children:"// 通过 Provider 的 config 参数设置 中间件"})]}),"\n",(0,n.jsxs)(r.span,{className:"line",children:[(0,n.jsx)(r.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,n.jsx)(r.span,{style:{color:"var(--shiki-token-keyword)"},children:"<"}),(0,n.jsx)(r.span,{style:{color:"var(--shiki-color-text)"},children:"App "}),(0,n.jsx)(r.span,{style:{color:"var(--shiki-token-keyword)"},children:"/>"})]}),"\n",(0,n.jsxs)(r.span,{className:"line",children:[(0,n.jsx)(r.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,n.jsx)(r.span,{style:{color:"var(--shiki-token-keyword)"},children:"</"}),(0,n.jsx)(r.span,{style:{color:"var(--shiki-color-text)"},children:"Provider"}),(0,n.jsx)(r.span,{style:{color:"var(--shiki-token-keyword)"},children:">"}),(0,n.jsx)(r.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,n.jsxs)(r.span,{className:"line",children:[(0,n.jsx)(r.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,n.jsx)(r.span,{style:{color:"var(--shiki-token-constant)"},children:"document"}),(0,n.jsx)(r.span,{style:{color:"var(--shiki-token-function)"},children:".getElementById"}),(0,n.jsx)(r.span,{style:{color:"var(--shiki-color-text)"},children:"("}),(0,n.jsx)(r.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'root'"}),(0,n.jsx)(r.span,{style:{color:"var(--shiki-color-text)"},children:")"}),(0,n.jsx)(r.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,n.jsx)(r.span,{className:"line",children:(0,n.jsx)(r.span,{style:{color:"var(--shiki-color-text)"},children:");"})}),"\n",(0,n.jsx)(r.span,{className:"line"})]})})]})]}),"\n",(0,n.jsxs)(r.div,{className:"modern-directive caution",children:[(0,n.jsx)(r.p,{className:"modern-directive-title",children:"CAUTION"}),(0,n.jsx)(r.div,{className:"modern-directive-content",children:(0,n.jsx)(r.p,{children:"\nReduck 基于 Redux 底层 API 做了上层封装，屏蔽了 Redux 的一些底层概念，如 Reducer 等。Reduck 对于 Model 是动态挂载的，而 Redux 是在 Store 创建时就会挂载应用所需的全部状态。基于这些实现上的差异，有些 Redux 生态的库是无法直接在 Reduck 中使用的。"})})]})]})}var c=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=e.components||{};return r?(0,n.jsx)(r,Object.assign({},e,{children:(0,n.jsx)(t,e)})):t(e)}}}]);