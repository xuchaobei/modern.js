(self.webpackChunkwebpack=self.webpackChunkwebpack||[]).push([["docs_zh_apis_monorepo_hooks_features_mdx"],{19164:function(e,n,r){"use strict";Object.defineProperty(n,"__esModule",{value:!0});!function(e,n){for(var r in n)Object.defineProperty(e,r,{enumerable:!0,get:n[r]})}(n,{frontmatter:function(){return s},toc:function(){return i},title:function(){return c},default:function(){return a}});var t=r("12151");let s={title:"features/",sidebar_position:3},i=[],c="features/";function o(e){let n=Object.assign({h1:"h1",a:"a",p:"p",code:"code",div:"div"},e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"features",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#features",children:"#"}),"features/"]}),"\n",(0,t.jsx)(n.p,{children:"Monorepo 工程方案内部模块类型项目目录。"}),"\n",(0,t.jsxs)(n.p,{children:["Modern.js Monorepo 工程方案约定将内部模块类型子项目放置在 ",(0,t.jsx)(n.code,{children:"features"})," 目录下进行统一管理，",(0,t.jsx)(n.code,{children:"features"})," 目录下每一个文件夹都是一个完整的模块项目。"]}),"\n",(0,t.jsx)(n.p,{children:"内部模块项目用于一些不需要编译的公共的组件和工具的编写，这类型的项目不包含编译、发布命令，在应用类型项目中引用时，应用类型项目会默认对其进行编译。"}),"\n",(0,t.jsxs)(n.div,{className:"modern-directive info",children:[(0,t.jsx)(n.p,{className:"modern-directive-title",children:"INFO"}),(0,t.jsx)(n.div,{className:"modern-directive-content",children:(0,t.jsx)(n.p,{children:"\n可直接在项目下执行 new 命令内部模块类型子项目。"})})]})]})}var a=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=e.components||{};return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(o,e)})):o(e)}}}]);