(self.webpackChunkwebpack=self.webpackChunkwebpack||[]).push([["packages_toolkit_main-doc_en_configure_app_output_disable-node-polyfill_mdx"],{54770:function(e,l,n){"use strict";Object.defineProperty(l,"__esModule",{value:!0});!function(e,l){for(var n in l)Object.defineProperty(e,n,{enumerable:!0,get:l[n]})}(l,{frontmatter:function(){return o},toc:function(){return i},title:function(){return r},default:function(){return c}});var s=n("41660");let o={sidebar_label:"disableNodePolyfill"},i=[],r="output.disableNodePolyfill";function t(e){let l=Object.assign({h1:"h1",a:"a",ul:"ul",li:"li",strong:"strong",code:"code",p:"p",div:"div",button:"button",pre:"pre",span:"span"},e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(l.h1,{id:"outputdisablenodepolyfill",children:[(0,s.jsx)(l.a,{className:"header-anchor","aria-hidden":"true",href:"#outputdisablenodepolyfill",children:"#"}),"output.disableNodePolyfill"]}),"\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsxs)(l.li,{children:[(0,s.jsx)(l.strong,{children:"Type:"})," ",(0,s.jsx)(l.code,{children:"boolean"})]}),"\n",(0,s.jsxs)(l.li,{children:[(0,s.jsx)(l.strong,{children:"Default:"})," ",(0,s.jsx)(l.code,{children:"true"})]}),"\n"]}),"\n",(0,s.jsx)(l.p,{children:"This config is used to control whether to inject the Polyfill of the Node module into the code."}),"\n",(0,s.jsxs)(l.p,{children:["By default, we will not inject Node Polyfill into the code to avoid bundle size increase. If you need to inject Node Polyfill, you can set ",(0,s.jsx)(l.code,{children:"output.disableNodePolyfill"})," to ",(0,s.jsx)(l.code,{children:"false"}),":"]}),"\n",(0,s.jsxs)(l.div,{className:"language-ts",children:[(0,s.jsx)(l.div,{className:"modern-code-title",children:"modern.config.ts"}),(0,s.jsxs)(l.div,{className:"modern-code-content",children:[(0,s.jsx)(l.button,{className:"copy"}),(0,s.jsx)(l.pre,{className:"shiki",style:{backgroundColor:"var(--shiki-color-background)"},children:(0,s.jsxs)(l.code,{children:[(0,s.jsxs)(l.span,{className:"line",children:[(0,s.jsx)(l.span,{style:{color:"var(--shiki-token-keyword)"},children:"export"}),(0,s.jsx)(l.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,s.jsx)(l.span,{style:{color:"var(--shiki-token-keyword)"},children:"default"}),(0,s.jsx)(l.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,s.jsx)(l.span,{style:{color:"var(--shiki-token-function)"},children:"defineConfig"}),(0,s.jsx)(l.span,{style:{color:"var(--shiki-color-text)"},children:"({"})]}),"\n",(0,s.jsxs)(l.span,{className:"line",children:[(0,s.jsx)(l.span,{style:{color:"var(--shiki-color-text)"},children:"  output"}),(0,s.jsx)(l.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,s.jsx)(l.span,{style:{color:"var(--shiki-color-text)"},children:" {"})]}),"\n",(0,s.jsxs)(l.span,{className:"line",children:[(0,s.jsx)(l.span,{style:{color:"var(--shiki-color-text)"},children:"    disableNodePolyfill"}),(0,s.jsx)(l.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,s.jsx)(l.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,s.jsx)(l.span,{style:{color:"var(--shiki-token-constant)"},children:"false"}),(0,s.jsx)(l.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,s.jsxs)(l.span,{className:"line",children:[(0,s.jsx)(l.span,{style:{color:"var(--shiki-color-text)"},children:"  }"}),(0,s.jsx)(l.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,s.jsx)(l.span,{className:"line",children:(0,s.jsx)(l.span,{style:{color:"var(--shiki-color-text)"},children:"});"})}),"\n",(0,s.jsx)(l.span,{className:"line"})]})})]})]}),"\n",(0,s.jsxs)(l.p,{children:["This config is implemented based on the Node Polyfill plugin of Modern.js Builder, you can read ",(0,s.jsx)(l.a,{href:"https://modernjs.dev/builder/en/plugins/plugin-node-polyfill.html",target:"_blank",rel:"nofollow",children:"Modern.js Builder - Node Polyfill Plugin"})," documentation for details."]})]})}var c=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:l}=e.components||{};return l?(0,s.jsx)(l,Object.assign({},e,{children:(0,s.jsx)(t,e)})):t(e)}}}]);