(self.webpackChunkwebpack=self.webpackChunkwebpack||[]).push([["docs_zh_configure_app_testing_transformer_mdx"],{89109:function(e,r,n){"use strict";Object.defineProperty(r,"__esModule",{value:!0});!function(e,r){for(var n in r)Object.defineProperty(e,n,{enumerable:!0,get:r[n]})}(r,{frontmatter:function(){return s},toc:function(){return i},title:function(){return c},default:function(){return a}});var t=n("12151");let s={title:"testing.transformer",sidebar_label:"transformer",sidebar_position:1},i=[],c="transformer";function l(e){let r=Object.assign({h1:"h1",a:"a",ul:"ul",li:"li",strong:"strong",code:"code",p:"p",div:"div"},e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(r.h1,{id:"transformer",children:[(0,t.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#transformer",children:"#"}),"transformer"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"类型："})," ",(0,t.jsx)(r.code,{children:"'babel-jest' | 'ts-jest'"})]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"默认值："})," ",(0,t.jsx)(r.code,{children:"babel-jest"})]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["配置执行测试的时候对于源码的编译工具： ",(0,t.jsx)(r.a,{href:"https://www.npmjs.com/package/babel-jest",target:"_blank",rel:"nofollow",children:"babel-jest"})," 或 ",(0,t.jsx)(r.a,{href:"https://github.com/kulshekhar/ts-jest",target:"_blank",rel:"nofollow",children:"ts-jest"}),"。默认使用 ",(0,t.jsx)(r.code,{children:"babel-jest"}),"。"]}),"\n",(0,t.jsxs)(r.div,{className:"modern-directive info",children:[(0,t.jsx)(r.p,{className:"modern-directive-title",children:"补充信息"}),(0,t.jsx)(r.div,{className:"modern-directive-content",children:(0,t.jsxs)(r.p,{children:["\n",(0,t.jsx)(r.code,{children:"babel-jest"})," 也可以编译 TS 文件，但不会类型报错，如果你需要跑测试的时候对 TS 类型进行校验，那么请使用 ",(0,t.jsx)(r.code,{children:"ts-jest"}),"。"]})})]})]})}var a=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=e.components||{};return r?(0,t.jsx)(r,Object.assign({},e,{children:(0,t.jsx)(l,e)})):l(e)}}}]);