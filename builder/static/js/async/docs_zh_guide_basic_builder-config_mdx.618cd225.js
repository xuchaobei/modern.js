(self.webpackChunkwebpack=self.webpackChunkwebpack||[]).push([["docs_zh_guide_basic_builder-config_mdx"],{74650:function(e,s,r){"use strict";Object.defineProperty(s,"__esModule",{value:!0});!function(e,s){for(var r in s)Object.defineProperty(e,r,{enumerable:!0,get:s[r]})}(s,{frontmatter:function(){return l},toc:function(){return c},title:function(){return o},default:function(){return a}});var n=r("12151"),i=r("21447");let l=void 0,c=[{id:"配置分类",text:"配置分类",depth:2},{id:"配置默认值",text:"配置默认值",depth:2},{id:"使用配置",text:"使用配置",depth:2},{id:"在上层框架中使用",text:"在上层框架中使用",depth:3},{id:"通过-node-api-使用",text:"通过 Node API 使用",depth:3},{id:"与框架配置的关系",text:"与框架配置的关系",depth:2},{id:"调试配置",text:"调试配置",depth:2}],o="Builder 配置项";function d(e){let s=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",ul:"ul",li:"li",h3:"h3",div:"div",button:"button",pre:"pre",code:"code",span:"span",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",strong:"strong"},(0,i.useMDXComponents)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.h1,{id:"builder-配置项",children:[(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#builder-配置项",children:"#"}),"Builder 配置项"]}),"\n",(0,n.jsx)(s.p,{children:"Builder 提供了丰富的配置项，以帮助使用者对构建行为进行定制。"}),"\n",(0,n.jsxs)(s.h2,{id:"配置分类",children:[(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#配置分类",children:"#"}),"配置分类"]}),"\n",(0,n.jsx)(s.p,{children:"Builder 中的配置可以分为以下几类："}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"/builder/api/config-dev.html",children:"Dev Config"}),"：与本地开发有关的配置。"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"/builder/api/config-html.html",children:"Html Config"}),"：与 HTML 有关的配置。"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"/builder/api/config-tools.html",children:"Tools Config"}),"：与底层工具有关的配置。"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"/builder/api/config-source.html",children:"Source Config"}),"：与源代码解析、编译方式相关的配置。"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"/builder/api/config-output.html",children:"Output Config"}),"：与构建产物有关的配置。"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"/builder/api/config-security.html",children:"Security Config"}),"：与安全有关的配置。"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"/builder/api/config-performance.html",children:"Performance Config"}),"：与编译性能、产物性能有关的配置。"]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["你可以在 ",(0,n.jsx)(s.a,{href:"/builder/api/index.html",children:"API Reference"})," 页面找到所有配置项的详细说明。"]}),"\n",(0,n.jsxs)(s.h2,{id:"配置默认值",children:[(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#配置默认值",children:"#"}),"配置默认值"]}),"\n",(0,n.jsx)(s.p,{children:"Builder 为每个配置项预设了一个默认值，默认值可以满足大部分使用场景。同时，上层框架也会基于垂直场景的需求，覆盖一部分配置的默认值。"}),"\n",(0,n.jsx)(s.p,{children:"因此，在大多数情况下，你不需要声明任何 Builder 配置，直接开箱使用即可。"}),"\n",(0,n.jsxs)(s.h2,{id:"使用配置",children:[(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#使用配置",children:"#"}),"使用配置"]}),"\n",(0,n.jsxs)(s.h3,{id:"在上层框架中使用",children:[(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#在上层框架中使用",children:"#"}),"在上层框架中使用"]}),"\n",(0,n.jsx)(s.p,{children:"当你使用一个基于 Builder 的上层框架时，你可以直接通过框架的配置文件来定义 Builder 配置，上层框架会自动将相关配置透传给 Builder。"}),"\n",(0,n.jsxs)(s.p,{children:["比如在 Modern.js 框架中，你可以直接在 ",(0,n.jsx)(s.a,{href:"https://modernjs.dev/configure/app/usage.html",target:"_blank",rel:"noopener noreferrer",children:"modern.config.ts"})," 文件里定义 Builder 的 ",(0,n.jsx)(s.a,{href:"/builder/api/config-source.html#sourcealias",children:"source.alias"})," 配置："]}),"\n",(0,n.jsxs)(s.div,{className:"language-ts",children:[(0,n.jsx)(s.div,{className:"modern-code-title",children:"modern.config.ts"}),(0,n.jsxs)(s.div,{className:"modern-code-content",children:[(0,n.jsx)(s.button,{className:"copy"}),(0,n.jsx)(s.pre,{className:"shiki",style:{backgroundColor:"var(--shiki-color-background)"},children:(0,n.jsxs)(s.code,{children:[(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"export"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"default"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" {"})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  source"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" {"})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    alias"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" {"})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"      "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'@common'"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'./src/common'"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    }"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  }"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"};"})}),"\n",(0,n.jsx)(s.span,{className:"line"})]})})]})]}),"\n",(0,n.jsx)(s.p,{children:"常用的框架配置文件包括："}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"框架"}),(0,n.jsx)(s.th,{children:"配置文件"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Modern.js"}),(0,n.jsx)(s.td,{children:"modern.config.ts"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"EdenX"}),(0,n.jsx)(s.td,{children:"edenx.config.ts"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"PIA"}),(0,n.jsx)(s.td,{children:"pia.config.ts"})]})]})]}),"\n",(0,n.jsxs)(s.h3,{id:"通过-node-api-使用",children:[(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#通过-node-api-使用",children:"#"}),"通过 Node API 使用"]}),"\n",(0,n.jsxs)(s.p,{children:["当你通过 Node API 调用 Builder 时，你可以通过 Provider 的 ",(0,n.jsx)(s.code,{children:"builderConfig"})," 配置项来传入 Builder 配置："]}),"\n",(0,n.jsxs)(s.div,{className:"language-ts",children:[(0,n.jsx)(s.div,{className:""}),(0,n.jsxs)(s.div,{className:"modern-code-content",children:[(0,n.jsx)(s.button,{className:"copy"}),(0,n.jsx)(s.pre,{className:"shiki",style:{backgroundColor:"var(--shiki-color-background)"},children:(0,n.jsxs)(s.code,{children:[(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"import"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" { builderWebpackProvider } "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"from"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'@modern-js/builder-webpack-provider'"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:";"})]}),"\n",(0,n.jsx)(s.span,{className:"line"}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"const"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"provider"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"builderWebpackProvider"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"({"})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  builderConfig"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" {"})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-comment)"},children:"// some configs"})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  }"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"});"})}),"\n",(0,n.jsx)(s.span,{className:"line"})]})})]})]}),"\n",(0,n.jsxs)(s.p,{children:["关于 Node API 的完整用法，请参考 ",(0,n.jsx)(s.a,{href:"/builder/api/builder-core.html#createbuilder",children:"API - createBuilder"}),"。"]}),"\n",(0,n.jsxs)(s.h2,{id:"与框架配置的关系",children:[(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#与框架配置的关系",children:"#"}),"与框架配置的关系"]}),"\n",(0,n.jsx)(s.p,{children:"通常来说，Builder 配置是框架配置的子集。"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Builder 配置只处理构建相关行为"}),"，而框架配置涵盖的范围更大，还包括运行时、服务端、部署等方面，因此框架是在 Builder 配置的基础上扩展出来的。"]}),"\n",(0,n.jsxs)(s.h2,{id:"调试配置",children:[(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#调试配置",children:"#"}),"调试配置"]}),"\n",(0,n.jsxs)(s.p,{children:["在执行构建时，你可以添加 ",(0,n.jsx)(s.code,{children:"DEBUG=builder"})," 环境变量来开启 Builder 的调试模式。"]}),"\n",(0,n.jsxs)(s.div,{className:"language-bash",children:[(0,n.jsx)(s.div,{className:""}),(0,n.jsxs)(s.div,{className:"modern-code-content",children:[(0,n.jsx)(s.button,{className:"copy"}),(0,n.jsx)(s.pre,{className:"shiki",style:{backgroundColor:"var(--shiki-color-background)"},children:(0,n.jsxs)(s.code,{children:[(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"DEBUG=builder pnpm dev"})}),"\n",(0,n.jsx)(s.span,{className:"line"})]})})]})]}),"\n",(0,n.jsx)(s.p,{children:"在调试模式下，Builder 会将内部最终生成的 Builder 配置写入到产物目录下，便于开发者查看和调试。"}),"\n",(0,n.jsxs)(s.div,{className:"language-text",children:[(0,n.jsx)(s.div,{className:""}),(0,n.jsxs)(s.div,{className:"modern-code-content",children:[(0,n.jsx)(s.button,{className:"copy"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"Inspect config succeed, open following files to view the content:\n\n  - Builder Config: /Project/demo/dist/builder.config.js\n  - Webpack Config (web): /Project/demo/dist/webpack.config.web.js\n"})})]})]}),"\n",(0,n.jsxs)(s.p,{children:["打开生成的 ",(0,n.jsx)(s.code,{children:"/dist/builder.config.js"})," 文件，即可查看 Builder 配置的完整内容。"]}),"\n",(0,n.jsxs)(s.p,{children:["关于调试模式的完整介绍，请查看 ",(0,n.jsx)(s.a,{href:"/builder/guide/debug/debug-mode.html",children:"开启调试模式"})," 章节。"]})]})}var a=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,i.useMDXComponents)(),e.components);return s?(0,n.jsx)(s,Object.assign({},e,{children:(0,n.jsx)(d,e)})):d(e)}}}]);